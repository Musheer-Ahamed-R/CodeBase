1 -> Elasticsearch is a near real time search platform.(i.e there is a slight latency (normally one second)
     from the time we index/update/delete a document until the time it appears in your search results.)
2 -> Elasticsearch is distributed by nature: it knows how to manage multiple nodes to provide scale and high availability.(cluster)
     This also means that your application doesnâ€™t need to care about it.
3 -> When starting elastic search, we can name our node and the cluster it points to using the command:
    ./elasticsearch -Ecluster.name=my_cluster_name -Enode.name=my_node_name
4 -> Elasticsearch uses unicast network discovery by default to find other nodes on the same machine, 
     it is possible that you could accidentally start up more than one node on your computer and have them all join a single cluster. 
5 -> We can use any tool that allows us to make HTTP/REST calls to communicate with the elastix server.
6 -> Status Codes:
      * Green - everything is good (cluster is fully functional)
      * Yellow - all data is available but some replicas are not yet allocated (cluster is fully functional)
      * Red - some data is not available for whatever reason (cluster is partially functional)


1 -> The leaf queries can be used separately inside of a query(e.g query { match_all: {}} ) or can be used inside of a compound query.
***
2 -> Nested fields should be accessed with their fully qualified name.
3 -> We can do field boosting using the syntax - field^boost_value, where we specify the field name itself.(no need for specifying separately.)
***
4 -> Internally, when you map any date as a date type, it will be converted to an epoch+milliseconds timestamp. Internally. This is how Elasticsearch 
     is able to perform range queries against dates. But in the _source, your date will remain in the string representation you submitted.
     Because it's stored in epoch, and epoch is presumed to be in UTC, then all dates should be submitted in UTC, or ISO8601 with a timezone offset.
5 -> Multiple formats can be specified by separating them with || as a separator. Each format will be tried in turn until a matching format is found. 
     The first format will be used to convert the milliseconds-since-the-epoch value back into a string.


TODO:
    -> minimum_should_match_field - remember
    -> size, sort, from, source