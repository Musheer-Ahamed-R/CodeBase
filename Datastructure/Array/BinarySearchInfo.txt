Binary Search  -  Binary Search SHOULD be ALWAYS in MIND when working with Arrays When the Array Elements are in SOME ORDER (e.g Sorted Order, Increasing then Decreasing,
                  Order Maintained between Arrays etc..) and we need to FIND/SEARCH for an Element or a Change in the Order in such an Array.

Binary Search involves two types
                  -> Find an Exact Match
                        Cases :
                           1 -> Exact Match
                           2 -> Greater Than
                           3 -> Less Than
                  -> Normal Find
                        Cases
                           1 -> Exact Match
                           2 -> Otherwise


Algorithm :

   int start = 0;
   int end = a.length-1;
   while(start <= end) {
      int mid = (start + end)/2;
      if(a[mid] SOME_CONDITION SOME_VALUE) {
         start = mid + 1;
      } else {
         end = mid - 1;
      }
   }

   Points to Remember
      -> The start, end and mid can all be used in determining which way to go.(i.e Not just MID).
      -> There is NO NEED to Check ARRAY OUT OF BOUND for either start or mid or end.

   Notes :
      -> Here, mid will always be NEARER or EQUAL to low, because of "Integer Division".
