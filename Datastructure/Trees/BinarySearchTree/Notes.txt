1 -> If ANY problem is given on the binary search tree, ALWAYS consider using the BST Property as a FIRST 
	 OPTION.

2 -> The In-Order Traversal of a BST always gives the nodes in the Ascending Order and this should be SECOND
	 THING that comes to mind after property of BST.(i.e many problems can be solved using this technique).

// have doubt if O(log n) or O(h)
3 -> Most of the operations on a BST have a Time Complexity of O(h)(h - height of the tree), thus keeping the height of the
	 tree minimal(balanced) can be very useful.

4 - > The advantage of BST over Hash Table is very minimal.
		-> Inorder traversal gives nodes in sorted order
		-> Doing order statistics, finding closest lower and greater elements, doing range queries are easy to do with BSTs
		-> Easy to Implement
		-> O(log n) always guaranteed, but with Hash table Time complexity will increase when table resizing happens.O(1) 
		   average time in Hash Table.