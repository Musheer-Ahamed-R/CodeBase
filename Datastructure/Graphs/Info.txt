1 -> A Graph is a Pair(V, E), where V is a set of nodes, called Vertices and E is a collection of Vertices, called Edges.

2 -> Two types of Graphs
			-> Directed Graph(All the Edges are directed)(e.g route network)
      -> UnDirected Graph(All the Edges are undirected(e.g flight network)

3 -> When an Edge connects two Vertices, the Vertices are said to ADJACENT to each other.

4 -> The edges may contain weight/value/cost.

4 -> Graphs can be represented in Three ways
                                           Recommended Use                          Checking edge between Vertices          Iterate Over edges incident over a Vertex
         -> Adjacency Matrix       When the Graph is dense(lots of edges).                   O(1)                                      V
         -> Adjacency List         When the Graph is sparse(has less edges).                 Degree(v)                               Degree(V)
         -> Adjacency Set                                                                    log(Degree V)                           Degree(V)

5 -> A Separate VERTICES ARRAY is required for both Adjacency Matrix and Adjacency List.(But, could be avoided for Adjacency List)

6 -> Graph Traversal Algorithms
  		-> Depth First Search(DFS)
      -> Breadth First Search(BFS)

7 -> 