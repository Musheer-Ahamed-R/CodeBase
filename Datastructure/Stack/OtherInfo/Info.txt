Stack Info	-	-> Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO(Last In First 
				   Out) or FILO(First In Last Out).

				-> Mainly the following three basic operations are performed in the stack:
						-> Push : Adds an item in the stack. If the stack is full, then it is said to be an Overflow condition.
						-> Pop  : Removes an item from the stack. The items are popped in the reversed order in which they are pushed. If the stack is empty,
						 		  then it is said to be an Underflow condition.
						-> Peek : Get the topmost item.

				-> There are two ways to implement a stack:
						-> Using array
							  Pros: Easy to implement. Memory is saved as pointers are not involved.
							  Cons: It is not dynamic. It doesnâ€™t grow and shrink depending on needs at runtime.(This can be Overcome using ArrayList).
						-> Using linked list		
							  Pros: The linked list implementation of stack can grow and shrink according to the needs at runtime.
							  Cons: Requires extra memory due to involvement of pointers.

Applications	-
				-> Balancing of symbols
				-> Infix to Postfix /Prefix conversion
				-> Redo-undo features at many places like editors, photoshop.
				-> Forward and backward feature in web browsers
				-> Used in many algorithms like Tower of Hanoi, tree traversals, stock span problem, histogram problem.
				-> Other applications can be Backtracking, Knight tour problem, rat in a maze, N queen problem and sudoku solver							  

