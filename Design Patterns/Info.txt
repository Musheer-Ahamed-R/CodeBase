Design Patterns : 
	-> Design pattern is a general reusable solution or template to a commonly
	   occurring problem in software design. 
	-> The patterns typically show relationships and interactions between classes or 
	   objects. 
	-> The idea is to speed up the development process by providing tested, proven
	   development paradigm.

Types of Design Patterns

	-> Creational
	-> Structural
	-> Behavioral

	-> Creational : 
			-> These design patterns are all about class instantiation or object 
			   creation. These patterns can be further categorized into
			   Class-creational patterns and object-creational patterns.

			-> While class-creation patterns use inheritance effectively in the
			   instantiation process, object-creation patterns use delegation
			   effectively to get the job done.   

			   e.g Factory Method, Abstract Factory, Builder, Singleton, Object Pool, Prototype.

	-> Structural :
			-> These design patterns are about organizing different classes and 
			   objects to form larger structures and provide new functionality.		   
			   e.g Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Private Class Data and Proxy.

	-> Behavioral : 
			-> Behavioral patterns are about identifying common communication
			   patterns between objects and realize these patterns.		   

			   e.g Chain of responsibility, Command, Interpreter, Iterator, Mediator, 
			   Memento, Null Object, Observer, State, Strategy, Template method,
			   Visitor