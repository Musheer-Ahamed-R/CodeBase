Package -

      The Java compiler automatically imports two entire packages,
         -> java.lang package
         -> current package(the package for the current file).

      Nested Imports -
         This allows us to import the public nested classes of an enclosing class.

      Static Import Statement -
          The static import statement gives you a way to import the constants and static methods of a Class, so that we do not need to prefix the name of their class.

JAR -

   A JAR is "JUST LIKE A FOLDER" from where we can find the .Class Files.                                   // Important

Compiling -

   javac -d "DEST_PATH" -cp "CLASS_PATH" -sourcepath "SOURCE_PATH" FILENAME.java

   -d             -        The Directory, where we want our compiled .Class files to go

   -cp            -        The path FROM WHERE we can find the .Class Files.
                           It can be a Normal Path or a jar File(Both kinda Same)
                           By Default, the Compiler Searches in the Current Directory and the JAR file containing the Java platform classes.(JAVA API)
                           Make sure to Include the Current Directory("."), if Extra Class Paths are Provided.

   -sourcepath    -        The Path from where we can find the .java Files(In case some of the Source Files are on a Different Directory).
                           By Default, the Compiler Searches in the Current Directory
                           Make sure to Include the Current Directory("."), if Extra Source Paths are Provided.

   Note :
      -> We can compile our project from Anywhere, we just need to give the Class Path and the Destination Directory and Traverse to the Java File Containing the Main method.
      -> Traversing to the Main Java Class is a Normal Traversal(i.e) No Package Level Traversing
      -> The CLASS_PATH can be any PATH and need not be set as an Environment Variable.

Running -

   java -cp "CLASS_PATH" FILENAME

   -cp            -        Same as Above

   Note :
      -> We can run our project from Anywhere, we just need to give the Class Path and the Class File that contains the Main Method.
      -> Traversing the Main File should be Package Level.
