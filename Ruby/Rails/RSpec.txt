Describe:
  ->  RSpec.describe UpdateStripeCustomerSourceJob, type: :job do
      Here, the test run in the context of UpdateStripeCustomerSourceJob Object
  ->  By default, if the first argument to an outermost example group (describe or context block) is a class(like above), 
      RSpec creates an instance of that class and assigns it to the subject.
  ->  We can define subject ourselves
      subject { A.new } OR subject(:a) { A.new } (:a is name of the subject)
  ->  Use subject! for subject to be instantiated eagerly.

Matchers:
  equal                   - a.equal?(b)
  eql                     - a.eql?(b)
  be                      - a.equal?(b)
  eq                      - a == b


Comparision:
  be                      - >, <, <=

Perdicate:
  be_zero                 - 7.zero?
  be_empty                - [].empty?
  be_multiple_of(3)       - x.multiple_of?(3)
  have_key                - hash.has_key?(:foo). Same for all hash metods begin with has_

  be_zero
  be_empty
  have_all_string_keys    - any custom predicate method(i.e has ?). Any argument is passed to that method too.

Type matchers:

  be_kind_of              - class hierarchy or module
  be_instance_of

all matcher:
  all another_matcher     - e.g all( be_odd )    

