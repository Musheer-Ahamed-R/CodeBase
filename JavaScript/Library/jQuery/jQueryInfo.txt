jQuery   -  -> jQuery is a fast, small, and feature-rich JavaScript library. It makes things like HTML document traversal and manipulation,
               event handling, animation, and Ajax much simpler with an easy-to-use API that works across a multitude of browsers.

Advantages of jQuery -  -> It is Cross-Browser.
                        -> It is easier to use than Native JavaScript.
                        -> It is Extensible.
                        -> Simplifies and has Rich AJAX Support.
                        -> It has Large Development Community and Many Plugins.

Notes :
      -> $ is a shortcut for jQuery Object.

CDN                  -  -> Content Delivery Network(CDN) is a System of Distributed Servers that host resources such as Images, CSS, JavaScript Files etc..
                        -> Benefits of Using CDN   -
                              -> Distributed CDN Servers -  -> The jQuery file can be Downloaded from the CDN Server that is Closest to the User.
                              -> Browser Caching         -  -> If a User visits a Web Page that loads jQuery from a CDN Server, the Browser automatically Caches the File,
                                                               Thus, if he visits our website, the jQuery file NEED NOT be download it again.
                              -> Parallel Downloads      -  -> Escapes Parallel Download Restriction on a Domain.
                              -> Reduced Server Load     -  -> No Page Load will make a jQuery File request to our Server.
                        -> Disadvantages                 -  -> Our Client/Users Firewall may block the CDN. So, we may have to request to Whitelist the CDN.
                        Notes :
                           -> In case of any Failure to load jQuery from the CDN, we have to gracefully switch back to loading jQuery from our Server itself.


Additional Notes
   -> function -  -> Receives the index position of the element in the set and the old value(that will be returned by the Outer Function(e.g html() etc..)) as arguments(index because set is done on all the Set Elements(i.e) Not the First one).
                  -> We can use the old value argument to reference the previous content.
                  -> Within the function, "this" refers to the current element in the set.
                  Declaration
                        Function( Integer index, htmlString oldhtml )

jQuery Functions     -
      -> .ready()    -  -> This method offers a way to run JavaScript code as soon as the page's Document Object Model (DOM) becomes SAFE to manipulate/the DOM is fully loaded.
                        -> This doesn't wait for Images, CSS, Frames to be Fully Loaded.
                        Syntax                                 Returns
                           $( document ).ready( handler )      jQuery
                           $( handler )      // Preferred      jQuery
                           $().ready( handler )                jQuery

      -> .load()     -  -> The load event is sent to an element when it and all sub-elements have been COMPLETELY loaded.
                        -> This event fires after the "ready" Event.
                        -> This event can be sent to any element associated with a URL: images, scripts, frames, iframes, and the window object.
                        -> In general, it is not necessary to wait for all images to be fully loaded. If code can be executed earlier, it is usually
                           best to place it in a handler sent to the .ready() method.
                        -> This is removed in Version 3.0.
                        Syntax                                 Returns     Notes
                           .load( handler )                    jQuery
                           .load( [eventData ], handler )      jQuery      eventData is an object containing data that will be passed to the event handler.

      -> .click()    -  -> Bind an event handler to the "click" JavaScript event, or trigger that event on an element.
                        Syntax                                 Returns     Notes
                           .click( handler )                   jQuery
                           .click( [eventData ], handler )     jQuery      eventData is an object containing data that will be passed to the event handler.
                           .click()                            jQuery      Trigger a Click Event

      -> .css()      -  -> Get the value of a computed style property for the FIRST element in the set of matched elements or set one or more CSS properties for every matched element.
                        -> This accepts RELATIVE values similar to .animate(). Relative values are a string starting with += or -= to increment or decrement the current value. based on its previous values.
                        Syntax                                 Returns     Notes
                           .css( propertyName )
                              .css( propertyName )             String
                              .css( propertyNames )            String      propertyNames is an Array of one or more CSS properties.
                           .css( propertyName, value )
                              .css( propertyName, value )      jQuery
                              .css( propertyName, function )   jQuery      A function returning the value to set.
                              .css( properties )               jQuery      properties is an Object containing list of propertyName and Value.

      -> .hover()    -  -> Bind one or two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements.
                        -> The .hover() method binds handlers for both mouseenter and mouseleave events.
                        -> $( selector ).hover( handlerIn, handlerOut ) is shorthand for: $( selector ).mouseenter( handlerIn ).mouseleave( handlerOut );
                        -> Also $(selector).hover(handlerInOut) is shorthand for $( selector ).on( "mouseenter mouseleave", handlerInOut );
                        Syntax                                 Returns     Notes
                        .hover( handlerIn, handlerOut )
                           .hover( handlerIn, handlerOut )     jQuery      handlerIn      - A function to execute when the mouse pointer enters the element.
                                                                           handlerOut     - A function to execute when the mouse pointer leaves the element.
                        .hover( handlerInOut )
                           .hover( handlerInOut )              jQuery      handlerInOut   - A function to execute when the mouse pointer enters or leaves the element.

      -> .mouseenter()  -> Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.
                        -> This method is a shortcut for .on( "mouseenter", handler ) in the first two variations, and .trigger( "mouseenter" ) in the third.
                        Syntax                                 Returns
                           .mouseenter( handler )              jQuery
                           .mouseenter( [eventData ], handler) jQuery
                           .mouseenter()

      -> .html()     -  -> Get the HTML contents of the first element in the set of matched elements or set the HTML contents of every matched element.
                        -> This method uses the browser's innerHTML property.
                        -> Additionally, jQuery removes other constructs such as data and event handlers from child elements before replacing those elements with the new content.
                        -> In Internet Explorer up to and including version 9, setting the text content of an HTML element may corrupt the text nodes of its children that are being removed from the document
                           as a result of the operation. If we are keeping references to these DOM elements and need them to be unchanged, use .empty().html( string ) instead of .html(string)
                           so that the elements are removed from the document before the new string is assigned to the element.
                        Syntax                                 Returns     Notes
                        .html()
                           .html()                             String
                        .html( htmlString )
                           .html( htmlString )                 jQuery
                           .html( function )                   jQuery      A function returning the HTML content to set.

      -> .each()     -  -> It iterates over the DOM elements that are part of the jQuery object, executing a function for each matched element.
                        -> Most jQuery methods that return a jQuery object also loop through the set of elements in the jQuery collection â€” a process known as implicit iteration.
                           When this occurs, it is often unnecessary to explicitly iterate with the .each() method:
                        -> We can stop the loop from within the callback function by returning false.
                        Syntax                                 Returns
                           .each( function )                   jQuery

      -> .text()     -  -> Get the combined text contents of each element in the SET of MATCHED elements, including their Descendants, or set the text contents of the matched elements.
                        -> The .text() method cannot be used on form inputs or scripts. To set or get the text value of input or textarea elements, use the .val() method. To get the value of a script element, use the .html() method.
                        Syntax                                 Returns     Notes
                           .text()
                              .text()                          String
                           .text( text )
                              .text( text )                    jQuery
                              .text( function )                jQuery      A function returning the text content to set

      -> .filter()   -  -> Reduce the set of matched elements to those that match the selector or pass the function's test.
                        Syntax                                 Returns     Notes
                           .filter( selector )                 jQuery      A string containing a selector expression to match the current set of elements against.
                           .filter( function )                 jQuery      A function used as a test for each element in the set. The Function returns Boolean.
                           .filter( elements )                 jQuery      One or more DOM elements to match the current set of elements against.
                           .filter( selection )                jQuery      An existing jQuery object to match the current set of elements against.

      -> .contents() -  -> This method allows us to search through the IMMEDIATE Children of all the matched elements in the DOM tree and construct a new jQuery object from the matching elements.
                        -> The .contents() and .children() methods are similar, except that the former includes text nodes and comment nodes as well as HTML elements in the resulting jQuery object.
                        -> Most jQuery operations don't support text nodes and comment nodes. The few that do will have an explicit note on their API documentation page.
                        -> The .contents() method can also be used to get the content document of an iframe, if the iframe is on the same domain as the main page.
                        Syntax                                 Returns
                           .contents()                         jQuery

      -> .children() -  -> Get the Children of each element in the set of matched elements, optionally filtered by a selector.
                        -> The .children() method differs from .find() in that .children() only travels a SINGLE LEVEL down the DOM tree while .find() can traverse down multiple levels
                           to select descendant elements (grandchildren, etc.) as well.
                        -> Note also that like most jQuery methods, .children() does not return text nodes; to get all children including text and comment nodes, use .contents().
                        Syntax                                 Returns     Notes
                           .children( [selector ] )            jQuery      The Selector should be the Direct Child of the main Element and not the Main Element Itself.

      -> .find()     -  -> Get the DESCENDANTS of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.
                        -> The .find() and .children() methods are similar, except that the latter only travels a single level down the DOM tree.
                        -> Unlike most of the tree traversal methods, the selector expression is required in a call to .find(). If we need to retrieve all of the descendant elements,
                           we can pass in the universal selector '*' to accomplish this.
                        Syntax                                 Returns     Notes
                           .find( selector )                   jQuery      The Selector should be the Descendant of the main Element and not the Main Element Itself.
                           .find( element )                    jQuery      The Element should be the Descendant of the main Element and not the Main Element Itself.

      -> .parent()   -  -> This method traverses to the IMMEDIATE Parent(optionally filtered by a selector) of each of these elements in the DOM tree
                           and constructs a new jQuery object from the matching elements.
                        -> This method is similar to .parents(), except .parent() only travels a Single level up the DOM tree. Also, $( "html" ).parent() method
                           returns a set containing document whereas $( "html" ).parents() returns an empty set.
                        -> If the Parent Element does not match the Selector(if provided), then it is IGNORED.(i.e The method DOES NOT Traverse to the Next Level to find its Ancestor).
                        Syntax                                 Returns     Notes
                           .parent( [selector ] )              jQuery      A string containing a selector expression to match elements against.

      -> .parents()  -  -> Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector.
                        -> This method allows us to search through the ALL the Ancestors of these elements in the DOM tree and construct a new jQuery object
                           from the matching elements ordered from immediate parent on up.
                        -> The elements are returned in order from the closest parent to the outer ones. When multiple DOM elements are in the original set,
                           the resulting set will be in reverse order of the original elements as well, with duplicates removed.
                        Syntax                                 Returns
                           .parents( [selector ] )             jQuery

      -> .closest()  -  -> For each element in the set, gets the first element that matches the selector by starting from the ELEMENT ITSELF and traversing up through its ancestors in the DOM tree.
                        -> The .parents() and .closest() methods are similar in that they both traverse up the DOM tree. The differences between the two, though subtle, are significant:
                                       .closest()	                                                                      .parents()
                              -> Begins with the current element	                                            Begins with the parent element
                              -> Travels up the DOM tree until it finds a match for the supplied selector     Travels up the DOM tree to the document's root element, adding each ancestor element to a
                                                                                                              temporary collection; it then filters that collection based on a selector if one is supplied
                              -> The returned jQuery object contains zero or one element 	                    The returned jQuery object contains zero or more elements
                                 for each element in the original set, in document order                      for each element in the original set, in reverse document order
                        Syntax                                 Returns     Notes
                        .closest( selector )
                           .closest( selector )                jQuery
                           .closest( selector [, context ] )   jQuery      context - A DOM element within(limit) which a matching element may be found(It Does not Traverse the (Other)Children of the Context).
                                                                           This is used to find an Element Within a Given Context.
                           .closest( selection )               jQuery
                           .closest( element )                 jQuery
                        .closest( selectors [, context ] )                 Removed in jQuery 1.8
                           .closest( selectors [, context ] )  Array

      -> .remove()   -  -> Remove the set of matched elements from the DOM.
                        -> Similar to .empty(), except that .remove() also removes the element itself.
                        -> In addition to the elements themselves, all bound events and jQuery data associated with the elements are removed.
                        -> To remove the elements without removing data and events, use .detach() instead(so they can be RE-ADDED later).
                        Syntax                                 Returns     Notes
                           .remove( [selector ] )              jQuery      The Selector should be the MAIN Element amongst the List and NOT a Child of that Main Element.

      -> .empty()    -  -> Remove all child nodes of the set of matched elements from the DOM.
                        -> This method removes not only child (and other descendant) elements, but also any text within the set of matched elements.
                        -> To avoid memory leaks, jQuery removes other constructs such as data and event handlers from the child elements before removing the elements themselves.
                        Syntax                                 Returns
                           .empty()                            jQuery

      -> .detach()   -  -> Remove the set of matched elements from the DOM.
                        -> The .detach() method is the same as .remove(), except that .detach() keeps all jQuery data associated with the removed elements.
                        -> This method is useful when removed elements are to be reinserted into the DOM at a later time.
                        Syntax                                 Returns     Notes
                           .detach( [selector ] )              jQuery      The Selector should be the MAIN Element amongst the List and NOT a Child of that Main Element.
