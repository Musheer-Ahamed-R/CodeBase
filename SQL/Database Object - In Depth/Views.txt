Views    -     -> A View is a SAVED SELECT QUERY or a VIRTUAL TABLE whose contents are defined by a query.
               -> Like a table, a view consists of a set of named columns and rows of data.
               -> Unless indexed, a view DOES NOT EXIST as a stored set of data values in a Database. The rows and columns of data come from tables referenced
                  in the query defining the view and are PRODUCED DYNAMICALLY when the View is referenced.
               -> A view acts as a Filter on the underlying tables referenced in the view. The query that defines the view can be from one or more tables
                  or from other views in the current or other databases
               -> Distributed queries can also be used to define views that use data from multiple heterogeneous sources. This is useful, for example, if you want
                  to combine similarly structured data from Different Servers, each of which stores data for a different region of your organization.
               -> Views are generally used to focus, simplify, and customize the perception each user has of the database.
               -> Views can be used as security mechanisms by letting users access data through the view, without granting the users permissions
                  to directly access the underlying base tables of the view.
               -> Views can be used to provide a backward compatible interface to emulate a table that used to exist but whose schema has changed.(i.e The End User need not know or Do Anything about the changes).
               -> Views can also be used when you copy data to and from SQL Server to improve performance and to partition data.
               -> Types of VIEWS
                     -> User-Defined Views
                     -> Indexed Views
                     -> Partitioned Views
                     -> System Views

                     User-Defined Views      -     ->



                     Indexed Views           -     -> An indexed view is a view that has been materialized. (i.e) The View definition has been Computed and the resulting data STORED just LIKE A TABLE with a clustered index is stored.
                                                   -> You index a view by creating a unique clustered index on it.
                                                   -> Indexed Views can dramatically improve the performance of some types of queries.(Since all the Computations are already done and stored).
                                                   -> Indexed Views work best for queries that aggregate many rows.
                                                   -> They are not well-suited for underlying data sets that are FREQUENTLY UPDATED.
